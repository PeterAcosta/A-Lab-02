
ARG IMAGE_NAME="amazonlinux:2023"
FROM ${IMAGE_NAME}
ARG IMAGE_NAME
# FROM amazonlinux:2023

ENV THIS_IMAGE=${IMAGE_NAME}

# Copia el archivo entrypoint.sh a la imagen
COPY entrypoint.03.sh /usr/local/bin/entrypoint.sh

RUN dnf -y update && \
    echo -e "PS1='{ \033[01;33m\]$THIS_IMAGE\[\033[00m\] } [\[\033[1;31m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]] \$ '" >> /root/.bashrc && \
    echo -e "\nalias ls='ls --color=auto' \nalias ll='ls -alF' \nalias lk='ls -l' " >> /root/.bashrc && \
    chmod +x /usr/local/bin/entrypoint.sh && \
    curl -o /etc/yum.repos.d/konimex-neofetch-epel-7.repo https://copr.fedorainfracloud.org/coprs/konimex/neofetch/repo/epel-7/konimex-neofetch-epel-7.repo && \
    dnf -y install neofetch && \
    dnf -y install mc


 
# Define el comando de entrada predeterminado
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
 
# Define el comando predeterminado si no se proporciona ninguno al iniciar el contenedor
CMD ["/bin/bash"] 



# image-5c-amazon-linux-2023:5c
# 5c-amazon-linux-2023

# build:
# docker build --tag image-5c-amazon-linux-2023:5c -f Dockerfile.5c-amazon-linux-2023 .
# docker history -H image-5c-amazon-linux-2023:5c --no-trunc

# run
# docker run --name 5c-amazon-linux-2023 image-5c-amazon-linux-2023:5c 
# docker exec -ti 5c-amazon-linux-2023 bash

# delete:
# docker rm -f 5c-amazon-linux-2023 && docker rmi image-5c-amazon-linux-2023:5c
