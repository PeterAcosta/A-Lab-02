
ARG IMAGE_NAME="redhat/ubi8:8.7"
FROM ${IMAGE_NAME}
ARG IMAGE_NAME
# FROM redhat/ubi8:8.7

ENV THIS_IMAGE=${IMAGE_NAME}

# Copia el archivo entrypoint.sh a la imagen
COPY entrypoint.02.sh /usr/local/bin/entrypoint.sh


RUN dnf -y update && \
    echo -e "\nPS1='{ \033[01;33m\]$THIS_IMAGE\[\033[00m\] } [\[\033[1;31m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]] \$ '" >> /root/.bashrc && \
    echo -e "alias ls='ls --color=auto' \nalias ll='ls -alF' \nalias lk='ls -l'" >> /root/.bashrc &&\
    chmod +x /usr/local/bin/entrypoint.sh && \
    curl -o /etc/yum.repos.d/konimex-neofetch-epel-7.repo https://copr.fedorainfracloud.org/coprs/konimex/neofetch/repo/epel-7/konimex-neofetch-epel-7.repo && \
    dnf -y install neofetch 
 
# Define el comando de entrada predeterminado
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
 
# Define el comando predeterminado si no se proporciona ninguno al iniciar el contenedor
CMD ["/bin/bash"] 



# image-4a-redhat-ubi8:4a
# 4a-redhat-ubi8

# docker build --tag image-4a-redhat-ubi8:4a -f Dockerfile.4a-redhat-ubi8-8.7 .
# docker history -H image-4a-redhat-ubi8:4a --no-trunc

# docker run --name 4a-redhat-ubi8 image-4a-redhat-ubi8:4a 
# docker exec -ti 4a-redhat-ubi8 bash

# docker rm -f 4a-redhat-ubi8 && docker rmi image-4a-redhat-ubi8:4a
