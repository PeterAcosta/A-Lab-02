ARG IMAGE_NAME="alpine:3.17"
FROM ${IMAGE_NAME}
ARG IMAGE_NAME
#FROM debian:bullseye-20230411

ENV THIS_IMAGE=${IMAGE_NAME}

# Copia el archivo entrypoint.sh a la imagen
COPY entrypoint.01.sh /usr/local/bin/entrypoint.sh
# COPY entrypoint.01.sh /tmp/entrypoint.sh

RUN apk update && apk upgrade --available && sync && \
    # chmod +x /tmp/entrypoint.sh  && \
    chmod +x /usr/local/bin/entrypoint.sh  && \
    apk add neofetch && \
    apk add mc && \
    echo "PS1='{ \033[01;33m\]$THIS_IMAGE\[\033[00m\] } [\[\033[1;31m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]] \$ '" >> /root/.bashrc && \
    echo "alias ll='ls -alF'" >> /root/.bashrc &&\
    echo "alias lk='ls -l'" >> /root/.bashrc &&\
    apk add figlet
    



# Define el comando de entrada predeterminado
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
 
# Define el comando predeterminado si no se proporciona ninguno al iniciar el contenedor
# CMD ["sh"] 
CMD ["/bin/bash"] 




# image-1a-alpine-3.17:1a
# 1a-alpine-3.17

# build:
# docker build --tag image-1a-alpine-3.17:1a -f Dockerfile.1a-alpine-3.17 .
# docker history -H image-1a-alpine-3.17:1a --no-trunc

# run:
# docker run --name 1a-alpine-3.17 image-1a-alpine-3.17:1a 
# docker exec -ti 1a-alpine-3.17 bash
# docker exec -ti 1a-alpine-3.17 sh

# remove container & image:
# docker rm -f 1a-alpine-3.17 && docker rmi image-1a-alpine-3.17:1a
